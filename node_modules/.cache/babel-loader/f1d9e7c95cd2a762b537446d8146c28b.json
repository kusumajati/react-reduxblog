{"ast":null,"code":"var _jsxFileName = \"/home/mahendra/Documents/react/reactstrap-basic-2 (copy)/src/AddProject.js\";\nimport React from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { Form, FormGroup, Label, Input, Button, FormText } from 'reactstrap';\nexport default class AddProjects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      imageUrl: '',\n      description: '',\n      redirect: false\n    };\n  }\n\n  AddNewProject() {\n    fetch(\"http://reduxblog.herokuapp.com/api/posts?key=terserahsihmas\", {\n      method: 'POST',\n      // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors',\n      // no-cors, cors, *same-origin\n      cache: 'no-cache',\n      // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin',\n      // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n      },\n      redirect: 'follow',\n      // manual, *follow, error\n      referrer: 'no-referrer',\n      // no-referrer, *client\n      body: JSON.stringify({\n        title: this.state.title,\n        categories: this.state.imageUrl,\n        content: this.state.description\n      })\n    }).then(() => {\n      this.setState({\n        redirect: true\n      });\n    });\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return React.createElement(Redirect, {\n        to: \"/projects\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleEmail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Project Name\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"examplePassword\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Image URL\"), React.createElement(Input, {\n      type: \"password\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"exampleSelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Project Description\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"select\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.AddNewProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}","map":{"version":3,"sources":["/home/mahendra/Documents/react/reactstrap-basic-2 (copy)/src/AddProject.js"],"names":["React","Link","Redirect","Form","FormGroup","Label","Input","Button","FormText","AddProjects","Component","constructor","props","state","title","imageUrl","description","redirect","AddNewProject","fetch","method","mode","cache","credentials","headers","referrer","body","JSON","stringify","categories","content","then","setState","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link, Redirect } from 'react-router-dom'\nimport {Form, FormGroup, Label, Input, Button, FormText} from 'reactstrap'\n\nexport default class AddProjects extends React.Component {\n    constructor(props){\n        super(props)\n        this.state ={\n            title:'',\n            imageUrl:'',\n            description:'',\n            redirect: false\n        }\n\n    }\n    AddNewProject(){\n        fetch(\t\"http://reduxblog.herokuapp.com/api/posts?key=terserahsihmas\",\n        {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, cors, *same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n            'Content-Type': 'application/json',\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrer: 'no-referrer', // no-referrer, *client\n        body: JSON.stringify({\n            title: this.state.title,\n            categories: this.state.imageUrl,\n            content: this.state.description\n        }),\n        \n    })\n    .then(()=>{\n        this.setState({\n            redirect:true\n        })\n    })\n\n    }\n    render() {\n            if(this.state.redirect){\n                return(\n                <Redirect to=\"/projects\"></Redirect>\n                )\n            }\n        return (\n            <div>\n                <Form>\n        <FormGroup>\n          <Label for=\"exampleEmail\">Project Name</Label>\n          <Input type=\"email\" name=\"email\" />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"examplePassword\">Image URL</Label>\n          <Input type=\"password\" name=\"password\"  />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"exampleSelect\">Project Description</Label>\n          <Input type=\"textarea\" name=\"select\" >\n          </Input>\n        </FormGroup>\n        <Button onClick={this.AddNewProject}>Submit</Button>\n      </Form>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}